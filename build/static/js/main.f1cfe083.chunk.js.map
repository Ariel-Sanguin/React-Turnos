{"version":3,"sources":["components/Formulario.js","components/Cita.js","App.js","reportWebVitals.js","index.js"],"names":["uuidv4","Formulario","crearCita","useState","mascota","dueño","fecha","hora","sintomas","cita","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","id","type","placeholder","onChange","Cita","eliminarCita","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1cfe083.chunk.js","sourcesContent":["import React, {Fragment, useState} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nuuidv4();\r\n\r\nconst Formulario = ({crearCita}) => {\r\n\r\n    //Crear State de citas\r\n    const [cita, actualizarCita]= useState({\r\n        mascota:'',\r\n        dueño:'',\r\n        fecha:'',\r\n        hora:'',\r\n        sintomas:''\r\n    });\r\n\r\n    const[error, actualizarError]= useState(false)\r\n\r\n    //Funcion que se ejecuta cada vez que el usuario escribe\r\n    const actualizarState = e => {\r\n        actualizarCita({\r\n            ...cita,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //Extraer valores\r\n    const{mascota, dueño, fecha, hora, sintomas} = cita;\r\n\r\n    //Cuando se presiona agregar turno\r\n    const submitCita = e =>{\r\n        e.preventDefault();\r\n\r\n        //Validacion\r\n        if(mascota.trim()==='' || dueño.trim()==='' || fecha.trim()==='' || hora.trim()==='' || sintomas.trim()===''){\r\n            actualizarError(true);\r\n            return;\r\n        }\r\n        //Eliminar el msj previo  de error\r\n        actualizarError(false);\r\n        //Asignacion de ID\r\n        cita.id= uuidv4();\r\n        \r\n        //Creacion de de cita\r\n        crearCita(cita);\r\n        //Reinicio del formulario\r\n        actualizarCita({\r\n            mascota: '',\r\n            dueño: '',\r\n            fecha:'',\r\n            hora: '',\r\n            sintomas: ''\r\n        })\r\n    }\r\n    return ( \r\n        <Fragment>\r\n            <h2>Crear citas</h2>\r\n            {error?<p className=\"alerta-error\">Todos los campos son obligatorios</p>  : null}\r\n\r\n            <form\r\n                onSubmit={submitCita}\r\n            >\r\n                <label>Nombre de Mascota</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"mascota\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre mascota\"\r\n                    onChange={actualizarState}\r\n                    value={mascota}\r\n                />\r\n\r\n                <label>Nombre del dueño</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"dueño\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre del dueño\"\r\n                    onChange={actualizarState}\r\n                    value={dueño}\r\n                />\r\n\r\n                <label>Fecha</label>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={fecha}\r\n                />\r\n\r\n                <label>Hora</label>\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={hora}\r\n                />\r\n\r\n                <label>Sintomas</label>\r\n                <textarea\r\n                    className=\"u-full-width\"\r\n                    name=\"sintomas\"\r\n                    onChange={actualizarState}\r\n                    value={sintomas}\r\n                ></textarea>\r\n                <button\r\n                    type=\"submmit\"\r\n                    className=\"u-full-width button-primary\"\r\n                >\r\n                    Agregar cita\r\n                </button>\r\n            </form>\r\n        </Fragment>\r\n     );\r\n}\r\nFormulario.propTypes = {\r\n    crearCita: PropTypes.func.isRequired\r\n} \r\nexport default Formulario;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Cita = ({cita,eliminarCita}) => {\r\n    return ( \r\n        <div className=\"cita\">\r\n            <p>Mascota <span>{cita.mascota}</span></p>\r\n            <p>Dueño <span>{cita.dueño}</span></p>\r\n            <p>Fecha <span>{cita.fecha}</span></p>\r\n            <p>Hora <span>{cita.hora}</span></p>\r\n            <p>Sintomas <span>{cita.sintomas}</span></p>\r\n            <button className=\"button eliminar u-full-width\"\r\n                    onClick= {()=> eliminarCita(cita.id)}\r\n            >\r\n                Eliminar \r\n            </button>\r\n        </div>\r\n     );\r\n}\r\n\r\nCita.propTypes = {\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n} \r\n \r\nexport default Cita;\r\n","import React, {Fragment, useState, useEffect} from 'react';\nimport Formulario from './components/Formulario';\nimport Cita from './components/Cita';\n\nfunction App() {\n\n  //citas en local storage\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n  if(!citasIniciales) {\n    citasIniciales = [];\n  }\n  //Arreglo de citas\n  const[citas, guardarCitas]= useState(citasIniciales);\n\n  //Colocar citas en local storage cada vez que citas nuevas o se eliminan\n  useEffect(()=> {\n    if (citasIniciales){\n      localStorage.setItem('citas',JSON.stringify(citas))\n    } else {\n      localStorage.setItem('citas', JSON.stringify([]));\n    };\n  },[citas]);\n\n  //Funcion q toma citas actuales y agrega la nueva\n  const crearCita= cita =>{\n    guardarCitas([\n      ...citas,\n      cita\n    ])\n  }\n\n  //Funcion que elimina cita\n  const eliminarCita = id=> {\n    const nuevasCitas = citas.filter(cita=> cita.id !== id);\n    guardarCitas(nuevasCitas);\n  }\n  //Mensaje condicional\n  const titulo = citas.length === 0? 'No hat citas' : 'Administra tus citas';\n  return (\n    <Fragment>\n      <h1>Administrador de turnos</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n              <Formulario\n                crearCita={crearCita}\n              />\n          </div>\n          <div className=\"one-half column\">\n              <h2>{titulo}</h2>\n              {citas.map(cita=>(\n                <Cita\n                key= {cita.id}\n                cita={cita}\n                eliminarCita={eliminarCita}\n                />\n              ))}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}